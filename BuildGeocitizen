pipeline {
  agent any

  tools {
    maven 'maven'
  }

  environment {
        DOCKERHUB_CREDENTIALS = credentials('nexus')
  }

  stages {

      stage('Git Checkout') {
          steps {
                git branch: 'main', credentialsId: 'github2', url: 'https://github.com/DevOpsAcademySS/Geocitizen'
          }
      }

//      stage('Build image') {
//        app = docker.build("citizen:3")
//      }
//
//      stage('Push image') {
//          docker.withRegistry('<your docker registry>', 'docker-private-credentials') {
//                app.push("${env.BUILD_NUMBER}")
//                app.push("latest")
//          }
//      }

//      stage('Build Geocitizen') {
//          steps {
//            sh './script.sh'
//            sh 'mvn clean package'
//          }
//      }
//
//      stage('Push war file') {
//          steps {
//            script{
//               def mavenPom = readMavenPom file: "pom.xml"
//               nexusArtifactUploader artifacts: [
//                    [
//                        artifactId: 'geo-citizen',
//                        classifier: '',
//                        file: 'target/citizen.war',
//                        type: 'war'
//                    ]
//            ],
//            credentialsId: 'nexus3',
//            groupId: 'com.softserveinc',
//            nexusUrl: '35.224.13.239:8081',
//            nexusVersion: 'nexus3',
//            protocol: 'http',
//            repository: 'citizen-release',
//            version: "${mavenPom.version}"
//            }
//          }
//      }

      stage('Login') {
          steps{
//              sh 'docker login -u admin 35.224.13.239:8085 -p 4312'
              sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u admin 35.224.13.239:8085 --password-stdin'
          }
      }

      stage('Push docker image') {
          steps{
            script{
                def mavenPom = readMavenPom file: "pom.xml"
                sh "docker push 35.224.13.239:8085/citizen:${mavenPom.version}"
            }
          }
      }
  }
}