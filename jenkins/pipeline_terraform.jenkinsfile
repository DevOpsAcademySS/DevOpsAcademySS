pipeline {
     agent { 
        label "test" 
    }
    environment {
        AWS_DEFAULT_REGION="eu-north-1"
        THE_BUTLER_SAYS_SO=credentials('terraform-on-aws-creds')
    }
    tools {
        terraform 'terraform'
    }
    stages {
        stage('Terraform init') {
            steps {
                sh '''cd /var/lib/jenkins/terraform/
                    terraform init -no-color
                    '''
            }            
        }
        stage('Terraform plan') {
            steps {
                sh '''cd /var/lib/jenkins/terraform/
                    terraform plan -no-color
                    '''
            }            
        }
        stage('Terraform apply') {
            steps {
                sh '''cd /var/lib/jenkins/terraform/
                    terraform apply --auto-approve -no-color
                    '''
            }            
        }
        stage("Save Terraform output in 'ec2ips.txt', 'db_ip.txt' and 'web_ip.txt'"){
            steps{
                sh '''terraform output -raw aws_instance.ubuntu.public_ip > db_ip.txt
                terraform output -raw aws_instance.aml.public_ip > web_ip.txt
                '''
            }
        }
        stage("Save IP's in environment variables"){
            steps{
                script {
                    env.DB_IP = readFile('db_ip.txt').trim()
                    env.WEB_IP = readFile('web_ip.txt').trim()
                }
                echo "DB_IP: ${env.DB_IP}"
                echo "WEB_IP: ${env.WEB_IP}"
            }
        }
    }
    post {
        success {
            echo "Terraform apply success!!!"
            script {
                build job: 'run_ansible', parameters: [string(name: 'WEB_IP', value: String.valueOf(env.WEB_IP)), string(name: 'DB_IP', value: String.valueOf(env.DB_IP))], wait: false
                
            }
        }
    }
}