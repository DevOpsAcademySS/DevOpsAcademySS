---
- ec2_metadata_facts:

# tasks file for amazon_docker_tomcat
- name: Update all packages
  yum:
    name: '*'
    state: latest
    update_only: yes
- name: Enable amazon-linux-extras packages
  shell: "amazon-linux-extras enable {{ item }}"
  become: yes
  with_items: 
    - epel

- name: Ensure a list of yum packages are installed
  yum:
    name: epel-release
    state: latest

- name: Ensure a list of yum packages are installed
  yum:
    name: "{{ item }}"
    state: latest
    update_cache: yes
  with_items:
    - python-pip
    - yum-utils
    - device-mapper-persistent-data
    - lvm2
    - amazon-linux-extras
    - git
    - supervisor
- name: Install docker module for python
  pip:
    name: ["docker-py","psutil","statsd"]

- name: Add extras repository
  shell: yum-config-manager --enable extras

- name: Install docker-ce (centos) via amazon-linux-extras packages
  shell: "amazon-linux-extras install docker -y"

- name: Enable Docker CE service at startup
  service:
    name: docker
    state: started
    enabled: yes

- name: Adding user ec2-user to docker group  
  user: 
    name: ec2-user
    groups: docker
    append: yes
  become: yes

- name: Allow access to insecure registry
  template:
    src: daemon.j2
    dest: /etc/docker/daemon.json
  notify: 
  - Reload docker

- name: Force all notified handlers to run at this point, not waiting for normal sync points
  meta: flush_handlers
  
- name: Log into private registry and force re-authorization
  docker_login:
    registry: "http://{{ nexus_url }}/repository/d4m-docker-images/"
    username: "{{ nexus_admin }}"
    password: "{{ nexus_pass }}"
    reauthorize: yes

- name: Create a geocitizen container
  docker_container:
    name: geocitizen
    image: "{{ nexus_url }}/repository/d4m-docker-images/tomcat-geo:latest"
    ports:
      - "8080:8080"

#statsd daemon docker
- name: Clone statsd from github
  git:
    repo: https://github.com/statsd/statsd.git
    dest: ./statsd
    clone: yes
    force: yes

- name: Replace between the expressions 
  replace:
    path: ./statsd/exampleConfig.js
    after: '*\\/'
    before: ","
    regexp: '\{'
    replace: '{ deleteIdleStats: true,'

- name: Change graphite url
  replace:
    path: ./statsd/Dockerfile
    regexp: '\/graphite\/'
    replace: "/{{ graphite_url }}/"

- name: Build statsd image
  docker_image:
    build:
      path: ./statsd
    name: statsd
    tag: latest
    source: build

- name: Create a geocitizen container
  docker_container:
    name: statsd
    image: "statsd:latest"
    ports:
      - "8125:8125/udp"

#statsd-agent python script
- name: Clone statsd-agent from github
  git:
    repo: https://github.com/blackrosezy/statsd-agent.git
    dest: ./statsd-agent
    clone: yes
    force: yes

- name: get ip of the host
  copy: 
    content: "{{ ansible_ssh_host }}"
    dest: /tmp/public_ip

- name: delete everything but ip
  replace:
    path: /tmp/public_ip
    regexp: '\..*'
    replace: ""

- name: get ip from /tmp/public_ip
  slurp:
    src: /tmp/public_ip
  register: public_ip

# - name: Change statsd-agent dirs
#   replace:
#     path: ./statsd-agent/statsd-agent.py
#     regexp: 'localhost'
#     replace: "{{ graphite_url }}"

- name: Change statsd-agent dirs
  replace:
    path: ./statsd-agent/statsd-agent.py
    regexp: 'system\.'
    replace: "aws.{{ ansible_ec2_placement_availability_zone }}.{{ public_ip.content | b64decode }}.system."

- name: make /opt/statsd-agent directory
  file:
    path: /opt/statsd-agent
    state: directory

- name: Copy a "statsd-agent.py" to /opt/statsd-agent
  ansible.builtin.copy:
    src: ./statsd-agent/statsd-agent.py
    dest: /opt/statsd-agent/statsd-agent.py
    remote_src: yes

- name: create supervisor app
  template:
    src: statsd-agent.j2
    dest: /etc/supervisord.d/statsd-agent.ini

- name: start and enable supervisor
  service:
    name: supervisord
    state: restarted
    enabled: true

#cadvisor with statsd

- name: Create a cadvisor container
  docker_container:
    name: cadvisor
    image: google/cadvisor:latest
    entrypoint:
      - "/usr/bin/cadvisor"
      - "-logtostderr"
      - "-storage_driver=statsd"
      - "-storage_driver_host=localhost:8125"
#sensugo client